---
version: '2.0'
name: testing
description: Testing Workflows

workflows:

  zaqar_long_workflow:
    description: >-
      In bug https://bugs.launchpad.net/tripleo/+bug/1761050 it was suggested
      that Zaqar stops working after the Keystone token expires (1 hour). This
      workflow runs for 2 hours, sending workflows every 5 mins.
      (I had to change this to run for 5 hours, seems token expiry is 4 hours
      on my env.)
      After starting the workflow I watch these in tmux splits ...
        $ watch ~/scripts/wf-report
      and ...
        $ watch openstack messaging message list tripleo --client-id=de305d54-75b4-431b-adb2-eb6b9e546014
    tasks:
      send_message:
        action: zaqar.queue_post
        retry:
          delay: 300
          count: 60
          continue-on: <% true %>
        input:
          queue_name: tripleo
          messages:
            body:
              status: SUCCESS
            ttl: 360

  invalid_jinja:
    description: Shows that jobs cannot finish if following job has bad template

    tasks:
      http:
        action: std.http url='http://google.com'
        on-success:
          - follow_on
      follow_on:
        action: std.javascript
        input:
          script: |
            {{ nonexistent_variable }}

  join_retry:
    description: Shows that jobs with join all execute when they should fail

    type: direct

    output:
      ok: <% $.ok %>

    tasks:
      failure:
        action: std.javascript
        input:
          script: |
            throw "failed immediately"
        on-success:
          - joined_retry
      succeed_:
        action: std.javascript
        input:
          script: |
            var start = new Date().getTime()
            while(new Date().getTime() < start + 10000) { }
        on-success:
          - joined_retry
      joined_retry:
        retry:
          count: 3
          delay: 2
        join: all
        action: std.javascript
        input:
          script: |
            return 'ok'
        publish:
          ok: <% task(joined_retry).result %>

  pass_and_fail:
    tasks:
      noop_task:
        on-success:
          - succeed: <% true %>
          - fail

  fail_and_pass:
    tasks:
      noop_task:
        on-success:
          - fail
          - succeed: <% true %>
